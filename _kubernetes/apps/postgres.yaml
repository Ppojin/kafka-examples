apiVersion: v1
kind: Service
metadata:
  name: ppojin-postgres-svc
spec:
  ports:
    - port: 5432
      name: broker
      protocol: TCP
      targetPort: 5432
  selector:
    app: ppojin-postgres
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ppojin-postgres-entrypoint
data:
  pg.sql: |
    CREATE DATABASE PPOJIN;

---
apiVersion: v1
kind: Pod
metadata:
  name: ppojin-postgres
  labels:
    app: ppojin-postgres
spec:
  containers:
    - name: app
      image: postgres:14.5
      imagePullPolicy: IfNotPresent
      # command:
      # - postgres
      # - -c
      # - wal_level=logical
      env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
      volumeMounts:
        - name: data-volume
          mountPath: /var/lib/postgresql/data
        - name: config-volume
          mountPath: /docker-entrypoint-initdb.d
      resources:
        limits:
          memory: "128Mi"
          cpu: "500m"
  volumes:
    - name: data-volume
      persistentVolumeClaim:
        claimName: postgres-data-pvc
    # - name: data-volume
    #   hostPath:
    #     type: DirectoryOrCreate
    #     path: /ppojin/volume/ppojin-pg
    - name: config-volume
      configMap:
        name: ppojin-postgres-entrypoint
        items:
          - key: pg.sql
            path: pg.sql

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
  labels:
    app: postgres-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""
  volumeName: postgres-data-pv

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-data-pv
  labels:
    app: postgres-data-pv
spec:
  capacity:
    storage: 1Gi
  storageClassName: ""
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /ppojin/volume/ppojin-pg

